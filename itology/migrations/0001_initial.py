# Generated by Django 4.0.3 on 2022-03-21 10:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import itology.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Advert of the desired IT product', max_length=128)),
                ('description', models.TextField(help_text='Description of the desired IT product')),
                ('classify', models.BooleanField(help_text='Flag of expert evaluation of the division of the team into roles')),
                ('sole_execution', models.BooleanField(help_text='Single project flag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Advert',
                'verbose_name_plural': 'Adverts',
                'ordering': ['created_at'],
            },
            bases=(models.Model, itology.models.AbstractMixin),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('Individual', 'Individual'), ('Company', 'Company')], help_text='User account type', max_length=10)),
                ('user_type', models.CharField(choices=[('Customer', 'Customer'), ('Expert', 'Expert')], help_text='User type in the system', max_length=10)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Client',
                'ordering': ['user'],
            },
            bases=(models.Model, itology.models.AbstractMixin),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The role of an expert in a project', max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['title'],
            },
            bases=(models.Model, itology.models.AbstractMixin),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of IT specialization', max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['title'],
            },
            bases=(models.Model, itology.models.AbstractMixin),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1, help_text='Number of people in this role on the project', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('advert', models.ForeignKey(help_text='Advert of the desired IT product', on_delete=django.db.models.deletion.CASCADE, related_name='team', to='itology.advert', verbose_name='advert')),
                ('role', models.ForeignKey(help_text='The role of an expert in a project', on_delete=django.db.models.deletion.CASCADE, related_name='team', to='itology.role', verbose_name='role')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['amount'],
            },
        ),
        migrations.CreateModel(
            name='Subsection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of IT specialization', max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('section', models.ForeignKey(help_text='Name of type of IT specialization', on_delete=django.db.models.deletion.CASCADE, related_name='subsection', to='itology.section', verbose_name='section')),
            ],
            options={
                'verbose_name': 'Subsection',
                'verbose_name_plural': 'Subsections',
                'ordering': ['title'],
            },
            bases=(models.Model, itology.models.AbstractMixin),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(help_text='Comment text', max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(help_text='The user who left the comment', on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='itology.client', verbose_name='user')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='itology.comment', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['created_at'],
            },
            bases=(models.Model, itology.models.AbstractMixin),
        ),
        migrations.AddField(
            model_name='client',
            name='role',
            field=models.ManyToManyField(help_text='The role of an expert in a project', related_name='client', to='itology.role', verbose_name='role'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='advert',
            name='comment',
            field=models.ManyToManyField(help_text='Advert comment', related_name='advert', to='itology.comment', verbose_name='comment'),
        ),
        migrations.AddField(
            model_name='advert',
            name='creator',
            field=models.ForeignKey(help_text='Advert author', on_delete=django.db.models.deletion.CASCADE, related_name='advert', to='itology.client', verbose_name='user'),
        ),
    ]
